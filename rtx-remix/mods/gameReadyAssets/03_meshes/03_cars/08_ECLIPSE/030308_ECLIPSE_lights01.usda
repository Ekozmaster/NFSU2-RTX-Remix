#usda 1.0
(
    upAxis = "Z"
)

over "RootNode"
{
    over "meshes"
    {
        over "mesh_2186AD6FA828156A"
        {
            custom int preserveOriginalDrawCall = 1

            def SphereLight "Light_R_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                color3f inputs:color = (1, 0.46332043, 0)
                float inputs:intensity = 20
                float inputs:radius = 0.02
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness = 0.2
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.0101399559166566, -0.38888352826631944, 0.6607019062570103)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "Light_R_02" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                color3f inputs:color = (1, 0.46332043, 0)
                float inputs:intensity = 20
                float inputs:radius = 0.02
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness = 0.2
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-1.9839563370949236, -0.5190730661984162, 0.6637571705690561)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "Light_L_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                color3f inputs:color = (1, 0.46332043, 0)
                float inputs:intensity = 20
                float inputs:radius = 0.02
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness = 0.2
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.0101399559166566, 0.38888, 0.6607019062570103)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "Light_L_02" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                color3f inputs:color = (1, 0.46332043, 0)
                float inputs:intensity = 20
                float inputs:radius = 0.02
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness = 0.2
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-1.9839563370949236, 0.51907, 0.6637571705690561)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "mesh_6BC6EB5AAF0D02F9"
        {
            custom int preserveOriginalDrawCall = 1
        }

        over "mesh_5E6DAC5FDA152D0C"
        {
            custom int preserveOriginalDrawCall = 1

            def Xform "bulb_02" (
                references = @../00_Shared/bulb_type_01.usd@
            )
            {
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (3, 3, 3)
                double3 xformOp:translate = (1.8732319698195332, -0.41094550052866197, 0.3958313455993174)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def Xform "bulb_01" (
                references = @../00_Shared/bulb_type_01.usd@
            )
            {
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (3, 3, 3)
                double3 xformOp:translate = (1.8169002496820665, -0.5919272009773966, 0.41994825381653994)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "mesh_2290F0594897362A"
        {
            custom int preserveOriginalDrawCall = 1

            def Xform "bulb_02" (
                references = @../00_Shared/bulb_type_01.usd@
            )
            {
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (3, 3, 3)
                double3 xformOp:translate = (1.8732319698195332, 0.41095, 0.3958313455993174)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def Xform "bulb_01" (
                references = @../00_Shared/bulb_type_01.usd@
            )
            {
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (3, 3, 3)
                double3 xformOp:translate = (1.8169002496820665, 0.59193, 0.41994825381653994)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "mesh_BD21140A794C72AE"
        {
            custom int preserveOriginalDrawCall = 1

            def SphereLight "Light_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                color3f inputs:color = (1, 0, 0)
                float inputs:intensity = 10
                float inputs:radius = 0.02
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness = 0.2
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.0005135255691187, -0.34762613557450095, 0.6597051599989054)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "Light_02" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                color3f inputs:color = (1, 0, 0)
                float inputs:intensity = 10
                float inputs:radius = 0.02
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness = 0.2
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-1.9947128991439342, -0.40547657790011726, 0.6597051599989054)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "Light_03" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                color3f inputs:color = (1, 0, 0)
                float inputs:intensity = 10
                float inputs:radius = 0.02
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness = 0.2
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-1.9847077659505032, -0.4691706330490888, 0.6597051599989054)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "Light_04" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                color3f inputs:color = (1, 0, 0)
                float inputs:intensity = 10
                float inputs:radius = 0.02
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness = 0.2
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-1.9591869804798705, -0.5410597522904936, 0.6597051599989054)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "mesh_3980490C5A2982D2"
        {
            custom int preserveOriginalDrawCall = 1

            def SphereLight "Light_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                color3f inputs:color = (1, 0, 0)
                float inputs:intensity = 10
                float inputs:radius = 0.02
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness = 0.2
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.0005135255691187, 0.34763, 0.6597051599989054)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "Light_02" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                color3f inputs:color = (1, 0, 0)
                float inputs:intensity = 10
                float inputs:radius = 0.02
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness = 0.2
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-1.9947128991439342, 0.40548, 0.6597051599989054)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "Light_03" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                color3f inputs:color = (1, 0, 0)
                float inputs:intensity = 10
                float inputs:radius = 0.02
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness = 0.2
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-1.9847077659505032, 0.46917, 0.6597051599989054)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "Light_04" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                color3f inputs:color = (1, 0, 0)
                float inputs:intensity = 10
                float inputs:radius = 0.02
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness = 0.2
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-1.9591869804798705, 0.54106, 0.6597051599989054)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }
    }

    over "instances"
    {
        over "inst_D82C04BC0EA46C83_0"
        {
            over "mesh"
            {
                matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (-3.897866918123327e-9, -1.2141754268668592e-10, 0.5897395028486869, 1) )
            }
        }

        over "inst_748598482E6FC624_0"
        {
            over "mesh"
            {
                matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (-1.0662233762559481e-8, -3.3367086871294305e-10, 0.6313837821478216, 1) )
            }
        }

        over "inst_6BC6EB5AAF0D02F9_0"
        {
            def SphereLight "Light_R_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                color3f inputs:color = (1, 0.32142854, 0)
                float inputs:intensity = 20
                float inputs:radius = 0.02
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness = 0.2
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-1.9850803342477548, -0.5119185837107807, 0.6606632213265939)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "Light_R_02" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                color3f inputs:color = (1, 0.32142854, 0)
                float inputs:intensity = 20
                float inputs:radius = 0.015
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness = 0.2
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-1.93, -0.615, 0.6520578447566479)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "Light_L_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                color3f inputs:color = (1, 0.32142854, 0)
                float inputs:intensity = 20
                float inputs:radius = 0.02
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness = 0.2
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-1.9850803342477548, 0.51192, 0.6606632213265939)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "Light_L_02" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                color3f inputs:color = (1, 0.32142854, 0)
                float inputs:intensity = 20
                float inputs:radius = 0.015
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness = 0.2
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-1.93, 0.615, 0.6520578447566479)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }
    }

    over "Looks"
    {
    }
}


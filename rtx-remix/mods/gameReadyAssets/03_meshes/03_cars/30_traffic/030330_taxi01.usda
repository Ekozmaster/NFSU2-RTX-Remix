#usda 1.0
(
    upAxis = "Z"
)

over "RootNode"
{
    over "meshes"
    {
        over "mesh_4B4E1EB01E11891B"
        {
            over "mesh" (
                active = false
            )
            {
            }

            def SphereLight "trafficCar_lightSource_00" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                float inputs:intensity = 8000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (2.101536567504013, -0.5769518618043321, 0.3949530448892915)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                float inputs:intensity = 6000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (2.13, -0.425, 0.39495)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_02" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0.57915056, 0)
                float inputs:intensity = 3000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (1.985, -0.72, 0.39495)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_03" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:intensity = 3000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.39, -0.43, 0.56)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_04" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:intensity = 3000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.38, -0.565, 0.56)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_05" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:intensity = 3000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.3, -0.665, 0.56)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_06" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                float inputs:intensity = 8000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (2.101536567504013, 0.57695, 0.3949530448892915)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_07" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                float inputs:intensity = 6000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (2.13, 0.425, 0.39495)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_08" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0.57915056, 0)
                float inputs:intensity = 3000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (1.985, 0.72, 0.39495)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_09" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:intensity = 3000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.39, 0.43, 0.56)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_10" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:intensity = 3000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.38, 0.565, 0.56)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_11" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:intensity = 3000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.3, 0.665, 0.56)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_12" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0.8634857, 0.5830116)
                float inputs:intensity = 8000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-0.25, 0, 1.22)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def Xform "trafficCar_chevroletCapricePoliceCar94_1" (
                prepend references = @./trafficCar_chevroletCapricePoliceCar94.usd@
            )
            {
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 90)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (-0.10000000149011612, 0, -0.23)

                    over "World"
                    {
                        over "trafficCar_chevroletCapricePoliceCar94"
                        {
                            over "chevroletCapricePoliceCar94_GRP_carGeo01_Geo_chevroletCapricePoliceCar94_bodyWork" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/traffic_chevroletCapricePoliceCar94_bodyWorkTYPE02> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "chevroletCapricePoliceCar94_glassMirror_chevroletCapricePoliceCar94_GRP_carGeo01_Geo" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Chrome_Shiny> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "chevroletCapricePoliceCar94_GRP_carGeo01_Geo_chevroletCapricePoliceCar94_glassClear" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Glass_Clear> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "chevroletCapricePoliceCar94_GRP_carGeo01_Geo_chevroletCapricePoliceCar94_glassRed_type06" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Glass_Red_Normal_Type_06> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "chevroletCapricePoliceCar94_GRP_carGeo01_Geo_chevroletCapricePoliceCar94_glassOrange_type02" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Glass_Orange_Normal_Type_02> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "chevroletCapricePoliceCar94_GRP_carGeo01_Geo_chevroletCapricePoliceCar94_glassClear_type06" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Glass_Clear_Normal_Type_06> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "chevroletCapricePoliceCar94_GRP_carGeo01_Geo_chevroletCapricePoliceCar94_glassWhite_type06" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Glass_White_Normal_Type_06> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "chevroletCapricePoliceCar94_GRP_carGeo01_Geo_taxiSing01_plastic_taxiSing02" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/traffic_chevroletCapricePoliceCar94_taxiSignMat> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "chevroletCapricePoliceCar94_GRP_carGeo01_Geo_taxiSing02_taxiSing01_metal" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Chrome_Rough> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "chevroletCapricePoliceCar94_GRP_carGeo01_Geo_licPlateType01_09_licPlate01_metal" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Chrome_Rough> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "chevroletCapricePoliceCar94_GRP_carGeo01_Geo_licPlate01_color_licPlateType01_09" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/trafficShared_licSignMat> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "chevroletCapricePoliceCar94_GRP_carGeo01_Geo_licPlate01_color_licPlateType01_10" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/trafficShared_licSignMat> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "chevroletCapricePoliceCar94_GRP_carGeo01_Geo_licPlateType01_10_licPlate01_metal" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Chrome_Rough> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "chevroletCapricePoliceCar94_GRP_carGeo01_Geo_chevroletCapricePoliceCar94_chrome" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Reflector_Chrome> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "chevroletCapricePoliceCar94_GRP_carGeo01_Geo_chevroletCapricePoliceCar94_plasticBlack" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Plastic_Black_Glossy> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "chevroletCapricePoliceCar94_GRP_carGeo01_Geo_chevroletCapricePoliceCar94_steelRough" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Chrome_More_Rough> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "chevroletCapricePoliceCar94_GRP_carGeo01_Geo_chevroletCapricePoliceCar94_steelBlack" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Chrome_Black> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "chevroletCapricePoliceCar94_GRP_carGeo01_Geo_chevroletCapricePoliceCar94_interior" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/trafficShared_interior> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }
                        }
                    }
                }
            }

            over "trafficCar_chevroletCapricePoliceCar94_0" (
                active = false
            )
            {
            }
        }

        over "mesh_3DE91D968D064DE5"
        {
            over "mesh" (
                active = false
            )
            {
            }
        }

        over "mesh_03F4977EB8CA8A5F"
        {
            over "mesh" (
                active = false
            )
            {
            }
        }

        over "mesh_B2A171607CD75C1D"
        {
            over "mesh" (
                active = false
            )
            {
            }
        }

        over "mesh_C29112B5B308E01A"
        {
            over "mesh" (
                active = false
            )
            {
            }
        }

        over "mesh_817E2FFD9217F92E"
        {
            def Xform "trafficShared_wheelTire_medium01_0" (
                prepend references = @../00_Shared/trafficShared_wheelTire_medium01.usd@
            )
            {
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (0, 0, 90)
                    float3 xformOp:scale = (1.6, 1.25, 1.25)
                    double3 xformOp:translate = (0, 0.15, 0)

                    over "World"
                    {
                        over "trafficShared_wheelTire_medium01"
                        {
                            over "tireSample_medThin_textureCarMisc_GRP_Geo" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/trafficShared_wheelTireMat> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }
                        }
                    }
                }
            }

            over "mesh" (
                active = false
            )
            {
            }

            def Xform "trafficTire_taxi01_0" (
                prepend references = @./trafficTire_taxi01.usd@
            )
            {
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (0, 0, 90)
                    float3 xformOp:scale = (1, 0.95, 0.95)
                    double3 xformOp:translate = (0, 0.138, 0)

                    over "World"
                    {
                        over "trafficTire_taxi01"
                        {
                            over "pCylinder15_tire_taxi01_trafficWheels_Geo_Geo" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Reflector_Chrome> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }
                        }
                    }
                }
            }
        }

        over "mesh_DC66D89E8F2E5302"
        {
            over "mesh" (
                active = false
            )
            {
            }
        }

        over "mesh_7FDDF60D01A978F8"
        {
            def Xform "trafficShared_wheelTire_medium01_01" (
                prepend references = @../00_Shared/trafficShared_wheelTire_medium01.usd@
            )
            {
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (0, 0, 90)
                    float3 xformOp:scale = (1.6, 1.25, 1.25)
                    double3 xformOp:translate = (0, 0.15, 0)

                    over "World"
                    {
                        over "trafficShared_wheelTire_medium01"
                        {
                            over "tireSample_medThin_textureCarMisc_GRP_Geo" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/trafficShared_wheelTireMat> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }
                        }
                    }
                }
            }

            def Xform "trafficTire_taxi01_01" (
                prepend references = @./trafficTire_taxi01.usd@
            )
            {
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (0, 0, 90)
                    float3 xformOp:scale = (1, 0.95, 0.95)
                    double3 xformOp:translate = (0, 0.138, 0)

                    over "World"
                    {
                        over "trafficTire_taxi01"
                        {
                            over "pCylinder15_tire_taxi01_trafficWheels_Geo_Geo" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Reflector_Chrome> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }
                        }
                    }
                }
            }

            over "mesh" (
                active = false
            )
            {
            }
        }

        over "mesh_5C1ADD8B882CF27C"
        {
            over "mesh" (
                active = false
            )
            {
            }
        }

        over "mesh_3288CD8073F512F4"
        {
            over "mesh" (
                active = false
            )
            {
            }
        }

        over "mesh_F757F4CD527CCBE2"
        {
            over "mesh" (
                active = false
            )
            {
            }
        }

        over "mesh_C3C805F85684592D"
        {
            def SphereLight "trafficCar_lightSource_13" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                float inputs:intensity = 8000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (2.101536567504013, -0.5769518618043321, 0.3949530448892915)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_14" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                float inputs:intensity = 6000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (2.13, -0.425, 0.39495)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_15" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0.57915056, 0)
                float inputs:intensity = 3000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (1.985, -0.72, 0.39495)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_16" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:intensity = 3000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.39, -0.43, 0.56)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_17" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:intensity = 3000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.38, -0.565, 0.56)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_18" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:intensity = 3000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.3, -0.665, 0.56)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_19" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                float inputs:intensity = 8000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (2.101536567504013, 0.57695, 0.3949530448892915)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_20" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                float inputs:intensity = 6000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (2.13, 0.425, 0.39495)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_21" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0.57915056, 0)
                float inputs:intensity = 3000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (1.985, 0.72, 0.39495)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_22" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:intensity = 3000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.39, 0.43, 0.56)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_23" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:intensity = 3000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.38, 0.565, 0.56)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_24" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:intensity = 3000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.3, 0.665, 0.56)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_25" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0.8634857, 0.5830116)
                float inputs:intensity = 8000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-0.25, 0, 1.22)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def Xform "trafficCar_chevroletCapricePoliceCar94_02" (
                prepend references = @./trafficCar_chevroletCapricePoliceCar94.usd@
            )
            {
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 90)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (-0.10000000149011612, 0, -0.23)

                    over "World"
                    {
                        over "trafficCar_chevroletCapricePoliceCar94"
                        {
                            over "chevroletCapricePoliceCar94_GRP_carGeo01_Geo_chevroletCapricePoliceCar94_bodyWork" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/traffic_chevroletCapricePoliceCar94_bodyWorkTYPE02> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "chevroletCapricePoliceCar94_glassMirror_chevroletCapricePoliceCar94_GRP_carGeo01_Geo" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Chrome_Shiny> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "chevroletCapricePoliceCar94_GRP_carGeo01_Geo_chevroletCapricePoliceCar94_glassClear" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Glass_Clear> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "chevroletCapricePoliceCar94_GRP_carGeo01_Geo_chevroletCapricePoliceCar94_glassRed_type06" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Glass_Red_Normal_Type_06> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "chevroletCapricePoliceCar94_GRP_carGeo01_Geo_chevroletCapricePoliceCar94_glassOrange_type02" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Glass_Orange_Normal_Type_02> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "chevroletCapricePoliceCar94_GRP_carGeo01_Geo_chevroletCapricePoliceCar94_glassClear_type06" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Glass_Clear_Normal_Type_06> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "chevroletCapricePoliceCar94_GRP_carGeo01_Geo_chevroletCapricePoliceCar94_glassWhite_type06" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Glass_White_Normal_Type_06> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "chevroletCapricePoliceCar94_GRP_carGeo01_Geo_taxiSing01_plastic_taxiSing02" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/traffic_chevroletCapricePoliceCar94_taxiSignMat> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "chevroletCapricePoliceCar94_GRP_carGeo01_Geo_taxiSing02_taxiSing01_metal" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Chrome_Rough> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "chevroletCapricePoliceCar94_GRP_carGeo01_Geo_licPlateType01_09_licPlate01_metal" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Chrome_Rough> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "chevroletCapricePoliceCar94_GRP_carGeo01_Geo_licPlate01_color_licPlateType01_09" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/trafficShared_licSignMat> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "chevroletCapricePoliceCar94_GRP_carGeo01_Geo_licPlate01_color_licPlateType01_10" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/trafficShared_licSignMat> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "chevroletCapricePoliceCar94_GRP_carGeo01_Geo_licPlateType01_10_licPlate01_metal" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Chrome_Rough> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "chevroletCapricePoliceCar94_GRP_carGeo01_Geo_chevroletCapricePoliceCar94_chrome" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Reflector_Chrome> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "chevroletCapricePoliceCar94_GRP_carGeo01_Geo_chevroletCapricePoliceCar94_plasticBlack" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Plastic_Black_Glossy> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "chevroletCapricePoliceCar94_GRP_carGeo01_Geo_chevroletCapricePoliceCar94_steelRough" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Chrome_More_Rough> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "chevroletCapricePoliceCar94_GRP_carGeo01_Geo_chevroletCapricePoliceCar94_steelBlack" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Chrome_Black> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "chevroletCapricePoliceCar94_GRP_carGeo01_Geo_chevroletCapricePoliceCar94_interior" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/trafficShared_interior> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }
                        }
                    }
                }
            }

            over "mesh" (
                active = false
            )
            {
            }
        }

        over "mesh_4DB885CD78D98488"
        {
            over "mesh" (
                active = false
            )
            {
            }
        }

        over "mesh_BE916EFE0AC2DCF6"
        {
            over "mesh" (
                active = false
            )
            {
            }
        }

        over "mesh_0A51298B91C85BF7"
        {
            def SphereLight "trafficCar_lightSource_13" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                float inputs:intensity = 8000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (2.101536567504013, -0.5769518618043321, 0.3949530448892915)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_14" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                float inputs:intensity = 6000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (2.13, -0.425, 0.39495)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_15" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0.57915056, 0)
                float inputs:intensity = 3000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (1.985, -0.72, 0.39495)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_16" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:intensity = 3000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.39, -0.43, 0.56)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_17" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:intensity = 3000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.38, -0.565, 0.56)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_18" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:intensity = 3000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.3, -0.665, 0.56)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_19" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                float inputs:intensity = 8000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (2.101536567504013, 0.57695, 0.3949530448892915)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_20" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                float inputs:intensity = 6000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (2.13, 0.425, 0.39495)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_21" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0.57915056, 0)
                float inputs:intensity = 3000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (1.985, 0.72, 0.39495)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_22" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:intensity = 3000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.39, 0.43, 0.56)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_23" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:intensity = 3000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.38, 0.565, 0.56)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_24" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:intensity = 3000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.3, 0.665, 0.56)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_25" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0.8634857, 0.5830116)
                float inputs:intensity = 8000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-0.25, 0, 1.22)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def Xform "trafficCar_chevroletCapricePoliceCar94_02" (
                prepend references = @./trafficCar_chevroletCapricePoliceCar94.usd@
            )
            {
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 90)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (-0.10000000149011612, 0, -0.23)

                    over "World"
                    {
                        over "trafficCar_chevroletCapricePoliceCar94"
                        {
                            over "chevroletCapricePoliceCar94_GRP_carGeo01_Geo_chevroletCapricePoliceCar94_bodyWork" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/traffic_chevroletCapricePoliceCar94_bodyWorkTYPE02> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "chevroletCapricePoliceCar94_glassMirror_chevroletCapricePoliceCar94_GRP_carGeo01_Geo" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Chrome_Shiny> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "chevroletCapricePoliceCar94_GRP_carGeo01_Geo_chevroletCapricePoliceCar94_glassClear" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Glass_Clear> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "chevroletCapricePoliceCar94_GRP_carGeo01_Geo_chevroletCapricePoliceCar94_glassRed_type06" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Glass_Red_Normal_Type_06> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "chevroletCapricePoliceCar94_GRP_carGeo01_Geo_chevroletCapricePoliceCar94_glassOrange_type02" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Glass_Orange_Normal_Type_02> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "chevroletCapricePoliceCar94_GRP_carGeo01_Geo_chevroletCapricePoliceCar94_glassClear_type06" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Glass_Clear_Normal_Type_06> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "chevroletCapricePoliceCar94_GRP_carGeo01_Geo_chevroletCapricePoliceCar94_glassWhite_type06" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Glass_White_Normal_Type_06> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "chevroletCapricePoliceCar94_GRP_carGeo01_Geo_taxiSing01_plastic_taxiSing02" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/traffic_chevroletCapricePoliceCar94_taxiSignMat> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "chevroletCapricePoliceCar94_GRP_carGeo01_Geo_taxiSing02_taxiSing01_metal" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Chrome_Rough> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "chevroletCapricePoliceCar94_GRP_carGeo01_Geo_licPlateType01_09_licPlate01_metal" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Chrome_Rough> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "chevroletCapricePoliceCar94_GRP_carGeo01_Geo_licPlate01_color_licPlateType01_09" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/trafficShared_licSignMat> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "chevroletCapricePoliceCar94_GRP_carGeo01_Geo_licPlate01_color_licPlateType01_10" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/trafficShared_licSignMat> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "chevroletCapricePoliceCar94_GRP_carGeo01_Geo_licPlateType01_10_licPlate01_metal" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Chrome_Rough> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "chevroletCapricePoliceCar94_GRP_carGeo01_Geo_chevroletCapricePoliceCar94_chrome" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Reflector_Chrome> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "chevroletCapricePoliceCar94_GRP_carGeo01_Geo_chevroletCapricePoliceCar94_plasticBlack" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Plastic_Black_Glossy> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "chevroletCapricePoliceCar94_GRP_carGeo01_Geo_chevroletCapricePoliceCar94_steelRough" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Chrome_More_Rough> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "chevroletCapricePoliceCar94_GRP_carGeo01_Geo_chevroletCapricePoliceCar94_steelBlack" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Chrome_Black> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "chevroletCapricePoliceCar94_GRP_carGeo01_Geo_chevroletCapricePoliceCar94_interior" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/trafficShared_interior> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }
                        }
                    }
                }
            }

            over "mesh" (
                active = false
            )
            {
            }
        }

        over "mesh_08C0C201B98B69A4"
        {
            over "mesh" (
                active = false
            )
            {
            }
        }

        over "mesh_191C5C09778E7D21"
        {
            over "mesh" (
                active = false
            )
            {
            }
        }

        over "mesh_FB7B2C7B2FEAE847"
        {
            over "mesh" (
                active = false
            )
            {
            }
        }
    }
}


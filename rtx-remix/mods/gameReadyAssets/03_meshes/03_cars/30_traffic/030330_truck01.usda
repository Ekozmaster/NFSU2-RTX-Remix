#usda 1.0
(
    upAxis = "Z"
)

over "RootNode"
{
    over "meshes"
    {
        over "mesh_3F969B98B5505EB8"
        {
            def Xform "trafficCar_dodgeRamMK1_0" (
                prepend references = @./trafficCar_dodgeRamMK1.usd@
            )
            {
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 90)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (-0.15, 0, -0.26)

                    over "World"
                    {
                        over "trafficCar_dodgeRamMK1"
                        {
                            over "dodge_Ram_MK1_glassMirror_dodge_Ram_MK1_GRP_carGeo01_Geo" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Reflector_Chrome> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "dodge_Ram_MK1_GRP_carGeo01_Geo_dodge_Ram_MK1_glassRed_type06" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Glass_Red_Normal_Type_06> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "dodge_Ram_MK1_GRP_carGeo01_Geo_dodge_Ram_MK1_glassClear_typeCombined" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Glass_Clear_Normal_and_Height> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "dodge_Ram_MK1_GRP_carGeo01_Geo_dodge_Ram_MK1_glassOrange_type06" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Glass_Orange_Normal_Type_06> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "dodge_Ram_MK1_GRP_carGeo01_Geo_dodge_Ram_MK1_glassWhite_type06" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Glass_White_Normal_Type_06> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "dodge_Ram_MK1_GRP_carGeo01_Geo_dodge_Ram_MK1_glassClear" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Glass_Clear> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "dodge_Ram_MK1_GRP_carGeo01_Geo_licPlate02_color_licPlateType02_01" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/trafficShared_licSignMat> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "dodge_Ram_MK1_GRP_carGeo01_Geo_licPlate02_color_licPlateType02_02" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/trafficShared_licSignMat> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "dodge_Ram_MK1_GRP_carGeo01_Geo_licPlateType02_01_licPlate02_metal" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Chrome_Rough> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "dodge_Ram_MK1_GRP_carGeo01_Geo_licPlateType02_02_licPlate02_metal" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Chrome_Rough> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "dodge_Ram_MK1_GRP_carGeo01_Geo_dodge_Ram_MK1_bodyWork" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/traffic_dodgeRamMK1_bodyWork> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "dodge_Ram_MK1_GRP_carGeo01_Geo_dodge_Ram_MK1_chrome" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Reflector_Chrome> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "dodge_Ram_MK1_GRP_carGeo01_Geo_dodge_Ram_MK1_steelRough" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Chrome_Rough> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "dodge_Ram_MK1_GRP_carGeo01_Geo_dodge_Ram_MK1_plasticBlack" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Plastic_Black> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "dodge_Ram_MK1_GRP_carGeo01_Geo_dodge_Ram_MK1_interior" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/trafficShared_interior> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }
                        }
                    }
                }
            }

            over "mesh" (
                active = false
            )
            {
            }

            def SphereLight "trafficCar_lightSource_00" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                float inputs:intensity = 8000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (2.25, -0.67, 0.52)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (0.976834, 0.011314698, 0.011314698)
                float inputs:intensity = 4000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.46, -0.85, 0.565)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_02" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (0.976834, 0.011314698, 0.011314698)
                float inputs:intensity = 4000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.46, -0.85, 0.485)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_03" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (0.980695, 0.94268405, 0.58690244)
                float inputs:intensity = 3000
                float inputs:radius = 0.005
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.57, -0.19, 0.196)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_04" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                float inputs:intensity = 8000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (2.25, 0.67, 0.52)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_05" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (0.976834, 0.011314698, 0.011314698)
                float inputs:intensity = 4000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.46, 0.85, 0.565)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_06" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (0.976834, 0.011314698, 0.011314698)
                float inputs:intensity = 4000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.46, 0.85, 0.485)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_07" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (0.980695, 0.94268405, 0.58690244)
                float inputs:intensity = 3000
                float inputs:radius = 0.005
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.57, 0.19, 0.196)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "mesh_88D34C4EAA88E33A"
        {
            over "mesh" (
                active = false
            )
            {
            }
        }

        over "mesh_447BDCBB32158425"
        {
            over "mesh" (
                active = false
            )
            {
            }
        }

        over "mesh_B47A686087F971DF"
        {
            over "mesh" (
                active = false
            )
            {
            }
        }

        over "mesh_5B8965AB867747B4"
        {
            over "mesh" (
                active = false
            )
            {
            }
        }

        over "mesh_337155EBEF93C714"
        {
            def Xform "trafficTire_truck01_0" (
                prepend references = @./trafficTire_truck01.usd@
            )
            {
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (0, 0, 90)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0.10000000149011612, 0)

                    over "World"
                    {
                        over "trafficTire_truck01"
                        {
                            over "pCylinder9_tire_truck01_trafficWheels_Geo_Geo" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Chrome_Shiny> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }
                        }
                    }
                }
            }

            def Xform "trafficShared_wheelTire_wide01_0" (
                prepend references = @../00_Shared/trafficShared_wheelTire_wide01.usd@
            )
            {
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (0, 0, 90)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0.12, 0)

                    over "World"
                    {
                        over "trafficShared_wheelTire_wide01"
                        {
                            over "tireSample_bigWide_textureCarMisc_GRP_Geo" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/trafficShared_wheelTireMat> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }
                        }
                    }
                }
            }

            over "mesh" (
                active = false
            )
            {
            }
        }

        over "mesh_6E0411070E560DA7"
        {
            over "mesh" (
                active = false
            )
            {
            }
        }

        over "mesh_A0BBD0200909D6B1"
        {
            def Xform "trafficTire_truck01_01" (
                prepend references = @./trafficTire_truck01.usd@
            )
            {
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (0, 0, 90)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0.10000000149011612, 0)

                    over "World"
                    {
                        over "trafficTire_truck01"
                        {
                            over "pCylinder9_tire_truck01_trafficWheels_Geo_Geo" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Chrome_Shiny> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }
                        }
                    }
                }
            }

            def Xform "trafficShared_wheelTire_wide01_01" (
                prepend references = @../00_Shared/trafficShared_wheelTire_wide01.usd@
            )
            {
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (0, 0, 90)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0.12, 0)

                    over "World"
                    {
                        over "trafficShared_wheelTire_wide01"
                        {
                            over "tireSample_bigWide_textureCarMisc_GRP_Geo" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/trafficShared_wheelTireMat> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }
                        }
                    }
                }
            }

            over "mesh" (
                active = false
            )
            {
            }
        }

        over "mesh_9AEB4A42C18744CF"
        {
            over "mesh" (
                active = false
            )
            {
            }
        }

        over "mesh_96F9D0155EC27055"
        {
            def Xform "trafficCar_dodgeRamMK1_01" (
                prepend references = @./trafficCar_dodgeRamMK1.usd@
            )
            {
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 90)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (-0.15, 0, -0.26)

                    over "World"
                    {
                        over "trafficCar_dodgeRamMK1"
                        {
                            over "dodge_Ram_MK1_glassMirror_dodge_Ram_MK1_GRP_carGeo01_Geo" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Reflector_Chrome> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "dodge_Ram_MK1_GRP_carGeo01_Geo_dodge_Ram_MK1_glassRed_type06" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Glass_Red_Normal_Type_06> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "dodge_Ram_MK1_GRP_carGeo01_Geo_dodge_Ram_MK1_glassClear_typeCombined" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Glass_Clear_Normal_and_Height> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "dodge_Ram_MK1_GRP_carGeo01_Geo_dodge_Ram_MK1_glassOrange_type06" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Glass_Orange_Normal_Type_06> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "dodge_Ram_MK1_GRP_carGeo01_Geo_dodge_Ram_MK1_glassWhite_type06" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Glass_White_Normal_Type_06> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "dodge_Ram_MK1_GRP_carGeo01_Geo_dodge_Ram_MK1_glassClear" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Glass_Clear> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "dodge_Ram_MK1_GRP_carGeo01_Geo_licPlate02_color_licPlateType02_01" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/trafficShared_licSignMat> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "dodge_Ram_MK1_GRP_carGeo01_Geo_licPlate02_color_licPlateType02_02" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/trafficShared_licSignMat> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "dodge_Ram_MK1_GRP_carGeo01_Geo_licPlateType02_01_licPlate02_metal" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Chrome_Rough> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "dodge_Ram_MK1_GRP_carGeo01_Geo_licPlateType02_02_licPlate02_metal" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Chrome_Rough> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "dodge_Ram_MK1_GRP_carGeo01_Geo_dodge_Ram_MK1_bodyWork" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/traffic_dodgeRamMK1_bodyWork> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "dodge_Ram_MK1_GRP_carGeo01_Geo_dodge_Ram_MK1_chrome" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Reflector_Chrome> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "dodge_Ram_MK1_GRP_carGeo01_Geo_dodge_Ram_MK1_steelRough" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Chrome_Rough> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "dodge_Ram_MK1_GRP_carGeo01_Geo_dodge_Ram_MK1_plasticBlack" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Plastic_Black> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "dodge_Ram_MK1_GRP_carGeo01_Geo_dodge_Ram_MK1_interior" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/trafficShared_interior> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }
                        }
                    }
                }
            }

            def SphereLight "trafficCar_lightSource_08" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                float inputs:intensity = 8000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (2.25, -0.67, 0.52)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_09" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (0.976834, 0.011314698, 0.011314698)
                float inputs:intensity = 4000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.46, -0.85, 0.565)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_10" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (0.976834, 0.011314698, 0.011314698)
                float inputs:intensity = 4000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.46, -0.85, 0.485)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_11" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (0.980695, 0.94268405, 0.58690244)
                float inputs:intensity = 3000
                float inputs:radius = 0.005
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.57, -0.19, 0.196)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_12" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                float inputs:intensity = 8000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (2.25, 0.67, 0.52)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_13" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (0.976834, 0.011314698, 0.011314698)
                float inputs:intensity = 4000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.46, 0.85, 0.565)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_14" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (0.976834, 0.011314698, 0.011314698)
                float inputs:intensity = 4000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.46, 0.85, 0.485)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_15" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (0.980695, 0.94268405, 0.58690244)
                float inputs:intensity = 3000
                float inputs:radius = 0.005
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.57, 0.19, 0.196)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            over "mesh" (
                active = false
            )
            {
            }
        }

        over "mesh_0E99B1F453D8CD4E"
        {
            over "mesh" (
                active = false
            )
            {
            }
        }

        over "mesh_C5DFD4201796976A"
        {
            over "mesh" (
                active = false
            )
            {
            }
        }

        over "mesh_1A7E310C02FB7598"
        {
            over "mesh" (
                active = false
            )
            {
            }
        }

        over "mesh_C620834165D03CFD"
        {
            over "mesh" (
                active = false
            )
            {
            }
        }

        over "mesh_CE918948B565B839"
        {
            over "mesh" (
                active = false
            )
            {
            }
        }

        over "mesh_8D6B0E455602E99E"
        {
            def Xform "trafficCar_dodgeRamMK1_01" (
                prepend references = @./trafficCar_dodgeRamMK1.usd@
            )
            {
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 90)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (-0.15, 0, -0.26)

                    over "World"
                    {
                        over "trafficCar_dodgeRamMK1"
                        {
                            over "dodge_Ram_MK1_glassMirror_dodge_Ram_MK1_GRP_carGeo01_Geo" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Reflector_Chrome> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "dodge_Ram_MK1_GRP_carGeo01_Geo_dodge_Ram_MK1_glassRed_type06" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Glass_Red_Normal_Type_06> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "dodge_Ram_MK1_GRP_carGeo01_Geo_dodge_Ram_MK1_glassClear_typeCombined" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Glass_Clear_Normal_and_Height> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "dodge_Ram_MK1_GRP_carGeo01_Geo_dodge_Ram_MK1_glassOrange_type06" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Glass_Orange_Normal_Type_06> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "dodge_Ram_MK1_GRP_carGeo01_Geo_dodge_Ram_MK1_glassWhite_type06" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Glass_White_Normal_Type_06> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "dodge_Ram_MK1_GRP_carGeo01_Geo_dodge_Ram_MK1_glassClear" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Glass_Clear> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "dodge_Ram_MK1_GRP_carGeo01_Geo_licPlate02_color_licPlateType02_01" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/trafficShared_licSignMat> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "dodge_Ram_MK1_GRP_carGeo01_Geo_licPlate02_color_licPlateType02_02" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/trafficShared_licSignMat> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "dodge_Ram_MK1_GRP_carGeo01_Geo_licPlateType02_01_licPlate02_metal" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Chrome_Rough> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "dodge_Ram_MK1_GRP_carGeo01_Geo_licPlateType02_02_licPlate02_metal" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Chrome_Rough> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "dodge_Ram_MK1_GRP_carGeo01_Geo_dodge_Ram_MK1_bodyWork" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/traffic_dodgeRamMK1_bodyWork> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "dodge_Ram_MK1_GRP_carGeo01_Geo_dodge_Ram_MK1_chrome" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Reflector_Chrome> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "dodge_Ram_MK1_GRP_carGeo01_Geo_dodge_Ram_MK1_steelRough" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Chrome_Rough> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "dodge_Ram_MK1_GRP_carGeo01_Geo_dodge_Ram_MK1_plasticBlack" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Plastic_Black> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "dodge_Ram_MK1_GRP_carGeo01_Geo_dodge_Ram_MK1_interior" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/trafficShared_interior> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }
                        }
                    }
                }
            }

            def SphereLight "trafficCar_lightSource_08" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                float inputs:intensity = 8000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (2.25, -0.67, 0.52)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_09" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (0.976834, 0.011314698, 0.011314698)
                float inputs:intensity = 4000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.46, -0.85, 0.565)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_10" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (0.976834, 0.011314698, 0.011314698)
                float inputs:intensity = 4000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.46, -0.85, 0.485)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_11" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (0.980695, 0.94268405, 0.58690244)
                float inputs:intensity = 3000
                float inputs:radius = 0.005
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.57, -0.19, 0.196)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_12" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                float inputs:intensity = 8000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (2.25, 0.67, 0.52)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_13" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (0.976834, 0.011314698, 0.011314698)
                float inputs:intensity = 4000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.46, 0.85, 0.565)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_14" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (0.976834, 0.011314698, 0.011314698)
                float inputs:intensity = 4000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.46, 0.85, 0.485)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_15" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (0.980695, 0.94268405, 0.58690244)
                float inputs:intensity = 3000
                float inputs:radius = 0.005
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.57, 0.19, 0.196)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            over "mesh" (
                active = false
            )
            {
            }
        }

        over "mesh_767F2ADB534644CD"
        {
            over "mesh" (
                active = false
            )
            {
            }
        }

        over "mesh_6485FF0BE71B3F48"
        {
            over "mesh" (
                active = false
            )
            {
            }
        }

        over "mesh_405C15D17A98BDC6"
        {
            over "mesh" (
                active = false
            )
            {
            }
        }

        over "mesh_75C8E90991CA54E8"
        {
            over "mesh" (
                active = false
            )
            {
            }
        }

        over "mesh_34914FC6FEACDC46"
        {
            over "mesh" (
                active = false
            )
            {
            }
        }

        over "mesh_AAAA904F8D989FF8"
        {
            over "mesh" (
                active = false
            )
            {
            }
        }
    }
}


#usda 1.0
(
    upAxis = "Z"
)

over "RootNode"
{
    over "meshes"
    {
        over "mesh_938E6581A810F46C"
        {
            def Xform "trafficCar_oldsmobileBrovada_0" (
                prepend references = @./trafficCar_oldsmobileBrovada.usd@
            )
            {
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 90)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0.10000000149011612, 0, -0.35)

                    over "World"
                    {
                        over "trafficCar_oldsmobileBrovada"
                        {
                            over "oldsmobileBravada_glassClear_oldsmobileBravada_GRP_carGeo01_Geo" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Glass_Clear> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "oldsmobileBravada_GRP_carGeo01_Geo_oldsmobileBravada_glassMirror" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Chrome_Shiny> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "oldsmobileBravada_GRP_carGeo01_Geo_oldsmobileBravada_glassClear_typeCombined" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Glass_Clear_Normal_and_Height> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "oldsmobileBravada_GRP_carGeo01_Geo_oldsmobileBravada_glassClear_type06" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Glass_Clear_Normal_Type_06> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "oldsmobileBravada_GRP_carGeo01_Geo_oldsmobileBravada_glassOrange_type01" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Glass_Orange_Normal_Type_01> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "oldsmobileBravada_GRP_carGeo01_Geo_oldsmobileBravada_glassRed_typeCombined" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Glass_Red_Normal_and_Height> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "oldsmobileBravada_GRP_carGeo01_Geo_oldsmobileBravada_glassRed_type06" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Glass_Red_Normal_Type_06> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "oldsmobileBravada_GRP_carGeo01_Geo_oldsmobileBravada_glassRed_type11" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Glass_Red_Normal_Type_11> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "oldsmobileBravada_GRP_carGeo01_Geo_licPlate01_color_licPlateType01_01" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/trafficShared_licSignMat> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "oldsmobileBravada_GRP_carGeo01_Geo_licPlate01_color_licPlateType01_02" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/trafficShared_licSignMat> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "oldsmobileBravada_GRP_carGeo01_Geo_licPlateType01_01_licPlate01_metal" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Chrome_Rough> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "oldsmobileBravada_GRP_carGeo01_Geo_licPlateType01_02_licPlate01_metal" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Chrome_Rough> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "oldsmobileBravada_GRP_carGeo01_Geo_oldsmobileBravada_bodyWork" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/traffic_oldsmobileBravada_bodyWorkMat> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "oldsmobileBravada_GRP_carGeo01_Geo_oldsmobileBravada_chrome" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Reflector_Chrome> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "oldsmobileBravada_GRP_carGeo01_Geo_oldsmobileBravada_plasticBlack" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Plastic_Black_Glossy> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "oldsmobileBravada_GRP_carGeo01_Geo_oldsmobileBravada_interior" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/trafficShared_interior> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "oldsmobileBravada_GRP_carGeo01_Geo_oldsmobileBravada_steelBlack" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Chrome_Black> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }
                        }
                    }
                }
            }

            over "mesh" (
                active = false
            )
            {
            }

            def SphereLight "trafficCar_lightSource_00" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                float inputs:intensity = 8000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (2.4627525633761707, -0.7069758362331413, 0.5126263518795193)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0.44447756, 0.00772202)
                float inputs:intensity = 8000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (2.4808535159525036, -0.7059487831301112, 0.4047802156242222)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_02" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                float inputs:intensity = 2000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.4905950319976, -0.37917222608643897, 0.19702434949289316)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_03" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0.00772202, 0.00772202)
                float inputs:intensity = 8000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.2951816910742764, -0.8478183258218905, 0.6089927034974432)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_04" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0.00772202, 0.00772202)
                float inputs:intensity = 4000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.2897389824042875, -0.8446541350724601, 0.7192685961261711)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_05" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                float inputs:intensity = 8000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (2.4627525633761707, 0.70698, 0.5126263518795193)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_06" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0.44447756, 0.00772202)
                float inputs:intensity = 8000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (2.4808535159525036, 0.70595, 0.4047802156242222)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_07" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                float inputs:intensity = 2000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.4905950319976, 0.37917, 0.19702434949289316)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_08" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0.00772202, 0.00772202)
                float inputs:intensity = 8000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.2951816910742764, 0.84782, 0.6089927034974432)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_09" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0.00772202, 0.00772202)
                float inputs:intensity = 4000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.2897389824042875, 0.84465, 0.7192685961261711)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_10" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                float inputs:intensity = 12000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (2.492479131786695, -0.571644244863478, 0.5128584033260699)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_11" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                float inputs:intensity = 12000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (2.492479131786695, 0.57164, 0.5128584033260699)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "mesh_BDDBA7A05D822DA1"
        {
            over "mesh" (
                active = false
            )
            {
            }
        }

        over "mesh_B15585B742CBE124"
        {
            over "mesh" (
                active = false
            )
            {
            }
        }

        over "mesh_7DB4074BE3137755"
        {
            over "mesh" (
                active = false
            )
            {
            }
        }

        over "mesh_AB8654A4EFC550C1"
        {
            over "mesh" (
                active = false
            )
            {
            }
        }

        over "mesh_89F707F6FE1AF46C"
        {
            def Xform "trafficTire_suv01_0" (
                prepend references = @./trafficTire_suv01.usd@
            )
            {
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (0, 0, 90)
                    float3 xformOp:scale = (1, 0.9, 0.9)
                    double3 xformOp:translate = (0, 0.09, 0)

                    over "World"
                    {
                        over "trafficTire_suv01"
                        {
                            over "Rim_right_rear_tire_suv01_trafficWheels_Geo_Geo" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Chrome_Shiny> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "tire_suv01_trafficWheels_Geo_Geo_Bolts_right_rear" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Chrome_Shiny> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "tire_suv01_trafficWheels_Geo_Geo_pCylinder24" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Chrome_Shiny> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "tire_suv01_trafficWheels_Geo_Geo_pCylinder25" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Chrome_Shiny> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "tire_suv01_trafficWheels_Geo_Geo_pCylinder26" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Chrome_Shiny> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "tire_suv01_trafficWheels_Geo_Geo_pCylinder27" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Chrome_Shiny> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "tire_suv01_trafficWheels_Geo_Geo_pCylinder28" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Chrome_Shiny> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }
                        }
                    }
                }
            }

            def Xform "trafficShared_wheelTire_wide01_0" (
                prepend references = @../00_Shared/trafficShared_wheelTire_wide01.usd@
            )
            {
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (0, 0, 90)
                    float3 xformOp:scale = (1.1, 1.12, 1.12)
                    double3 xformOp:translate = (0, 0.12, 0)

                    over "World"
                    {
                        over "trafficShared_wheelTire_wide01"
                        {
                            over "tireSample_bigWide_textureCarMisc_GRP_Geo" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/trafficShared_wheelTireMat> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }
                        }
                    }
                }
            }

            over "mesh" (
                active = false
            )
            {
            }
        }

        over "mesh_BE8AE19849FC7439"
        {
            over "mesh" (
                active = false
            )
            {
            }
        }

        over "mesh_0CEFCBCFDD398C9A"
        {
            def Xform "trafficTire_suv01_01" (
                prepend references = @./trafficTire_suv01.usd@
            )
            {
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (0, 0, 90)
                    float3 xformOp:scale = (1, 0.9, 0.9)
                    double3 xformOp:translate = (0, 0.09, 0)

                    over "World"
                    {
                        over "trafficTire_suv01"
                        {
                            over "Rim_right_rear_tire_suv01_trafficWheels_Geo_Geo" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Chrome_Shiny> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "tire_suv01_trafficWheels_Geo_Geo_Bolts_right_rear" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Chrome_Shiny> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "tire_suv01_trafficWheels_Geo_Geo_pCylinder24" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Chrome_Shiny> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "tire_suv01_trafficWheels_Geo_Geo_pCylinder25" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Chrome_Shiny> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "tire_suv01_trafficWheels_Geo_Geo_pCylinder26" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Chrome_Shiny> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "tire_suv01_trafficWheels_Geo_Geo_pCylinder27" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Chrome_Shiny> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "tire_suv01_trafficWheels_Geo_Geo_pCylinder28" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Chrome_Shiny> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }
                        }
                    }
                }
            }

            def Xform "trafficShared_wheelTire_wide01_01" (
                prepend references = @../00_Shared/trafficShared_wheelTire_wide01.usd@
            )
            {
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (0, 0, 90)
                    float3 xformOp:scale = (1.1, 1.12, 1.12)
                    double3 xformOp:translate = (0, 0.12, 0)

                    over "World"
                    {
                        over "trafficShared_wheelTire_wide01"
                        {
                            over "tireSample_bigWide_textureCarMisc_GRP_Geo" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/trafficShared_wheelTireMat> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }
                        }
                    }
                }
            }

            over "mesh" (
                active = false
            )
            {
            }
        }

        over "mesh_992B762AD8CBACAA"
        {
            over "mesh" (
                active = false
            )
            {
            }
        }

        over "mesh_9B248BE54135105B"
        {
            over "mesh" (
                active = false
            )
            {
            }
        }

        over "mesh_025D80E5CA511C40"
        {
            def Xform "trafficCar_oldsmobileBrovada_01" (
                prepend references = @./trafficCar_oldsmobileBrovada.usd@
            )
            {
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 90)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0.10000000149011612, 0, -0.35)

                    over "World"
                    {
                        over "trafficCar_oldsmobileBrovada"
                        {
                            over "oldsmobileBravada_glassClear_oldsmobileBravada_GRP_carGeo01_Geo" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Glass_Clear> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "oldsmobileBravada_GRP_carGeo01_Geo_oldsmobileBravada_glassMirror" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Chrome_Shiny> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "oldsmobileBravada_GRP_carGeo01_Geo_oldsmobileBravada_glassClear_typeCombined" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Glass_Clear_Normal_and_Height> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "oldsmobileBravada_GRP_carGeo01_Geo_oldsmobileBravada_glassClear_type06" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Glass_Clear_Normal_Type_06> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "oldsmobileBravada_GRP_carGeo01_Geo_oldsmobileBravada_glassOrange_type01" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Glass_Orange_Normal_Type_01> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "oldsmobileBravada_GRP_carGeo01_Geo_oldsmobileBravada_glassRed_typeCombined" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Glass_Red_Normal_and_Height> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "oldsmobileBravada_GRP_carGeo01_Geo_oldsmobileBravada_glassRed_type06" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Glass_Red_Normal_Type_06> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "oldsmobileBravada_GRP_carGeo01_Geo_oldsmobileBravada_glassRed_type11" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Glass_Red_Normal_Type_11> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "oldsmobileBravada_GRP_carGeo01_Geo_licPlate01_color_licPlateType01_01" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/trafficShared_licSignMat> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "oldsmobileBravada_GRP_carGeo01_Geo_licPlate01_color_licPlateType01_02" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/trafficShared_licSignMat> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "oldsmobileBravada_GRP_carGeo01_Geo_licPlateType01_01_licPlate01_metal" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Chrome_Rough> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "oldsmobileBravada_GRP_carGeo01_Geo_licPlateType01_02_licPlate01_metal" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Chrome_Rough> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "oldsmobileBravada_GRP_carGeo01_Geo_oldsmobileBravada_bodyWork" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/traffic_oldsmobileBravada_bodyWorkMat> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "oldsmobileBravada_GRP_carGeo01_Geo_oldsmobileBravada_chrome" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Reflector_Chrome> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "oldsmobileBravada_GRP_carGeo01_Geo_oldsmobileBravada_plasticBlack" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Plastic_Black_Glossy> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "oldsmobileBravada_GRP_carGeo01_Geo_oldsmobileBravada_interior" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/trafficShared_interior> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "oldsmobileBravada_GRP_carGeo01_Geo_oldsmobileBravada_steelBlack" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Chrome_Black> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }
                        }
                    }
                }
            }

            def SphereLight "trafficCar_lightSource_12" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                float inputs:intensity = 8000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (2.4627525633761707, -0.7069758362331413, 0.5126263518795193)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_13" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0.44447756, 0.00772202)
                float inputs:intensity = 8000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (2.4808535159525036, -0.7059487831301112, 0.4047802156242222)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_14" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                float inputs:intensity = 2000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.4905950319976, -0.37917222608643897, 0.19702434949289316)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_15" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0.00772202, 0.00772202)
                float inputs:intensity = 8000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.2951816910742764, -0.8478183258218905, 0.6089927034974432)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_16" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0.00772202, 0.00772202)
                float inputs:intensity = 4000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.2897389824042875, -0.8446541350724601, 0.7192685961261711)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_17" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                float inputs:intensity = 8000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (2.4627525633761707, 0.70698, 0.5126263518795193)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_18" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0.44447756, 0.00772202)
                float inputs:intensity = 8000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (2.4808535159525036, 0.70595, 0.4047802156242222)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_19" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                float inputs:intensity = 2000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.4905950319976, 0.37917, 0.19702434949289316)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_20" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0.00772202, 0.00772202)
                float inputs:intensity = 8000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.2951816910742764, 0.84782, 0.6089927034974432)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_21" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0.00772202, 0.00772202)
                float inputs:intensity = 4000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.2897389824042875, 0.84465, 0.7192685961261711)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_22" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                float inputs:intensity = 12000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (2.492479131786695, -0.571644244863478, 0.5128584033260699)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_23" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                float inputs:intensity = 12000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (2.492479131786695, 0.57164, 0.5128584033260699)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            over "mesh" (
                active = false
            )
            {
            }
        }

        over "mesh_D2FA04A5946256B0"
        {
            over "mesh" (
                active = false
            )
            {
            }
        }

        over "mesh_6FEDE31752351F66"
        {
            over "mesh" (
                active = false
            )
            {
            }
        }

        over "mesh_38C3393A44CAF0A1"
        {
            def Xform "trafficCar_oldsmobileBrovada_01" (
                prepend references = @./trafficCar_oldsmobileBrovada.usd@
            )
            {
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 90)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0.10000000149011612, 0, -0.35)

                    over "World"
                    {
                        over "trafficCar_oldsmobileBrovada"
                        {
                            over "oldsmobileBravada_glassClear_oldsmobileBravada_GRP_carGeo01_Geo" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Glass_Clear> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "oldsmobileBravada_GRP_carGeo01_Geo_oldsmobileBravada_glassMirror" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Chrome_Shiny> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "oldsmobileBravada_GRP_carGeo01_Geo_oldsmobileBravada_glassClear_typeCombined" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Glass_Clear_Normal_and_Height> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "oldsmobileBravada_GRP_carGeo01_Geo_oldsmobileBravada_glassClear_type06" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Glass_Clear_Normal_Type_06> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "oldsmobileBravada_GRP_carGeo01_Geo_oldsmobileBravada_glassOrange_type01" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Glass_Orange_Normal_Type_01> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "oldsmobileBravada_GRP_carGeo01_Geo_oldsmobileBravada_glassRed_typeCombined" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Glass_Red_Normal_and_Height> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "oldsmobileBravada_GRP_carGeo01_Geo_oldsmobileBravada_glassRed_type06" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Glass_Red_Normal_Type_06> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "oldsmobileBravada_GRP_carGeo01_Geo_oldsmobileBravada_glassRed_type11" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Glass_Red_Normal_Type_11> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "oldsmobileBravada_GRP_carGeo01_Geo_licPlate01_color_licPlateType01_01" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/trafficShared_licSignMat> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "oldsmobileBravada_GRP_carGeo01_Geo_licPlate01_color_licPlateType01_02" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/trafficShared_licSignMat> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "oldsmobileBravada_GRP_carGeo01_Geo_licPlateType01_01_licPlate01_metal" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Chrome_Rough> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "oldsmobileBravada_GRP_carGeo01_Geo_licPlateType01_02_licPlate01_metal" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Chrome_Rough> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "oldsmobileBravada_GRP_carGeo01_Geo_oldsmobileBravada_bodyWork" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/traffic_oldsmobileBravada_bodyWorkMat> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "oldsmobileBravada_GRP_carGeo01_Geo_oldsmobileBravada_chrome" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Reflector_Chrome> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "oldsmobileBravada_GRP_carGeo01_Geo_oldsmobileBravada_plasticBlack" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Plastic_Black_Glossy> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "oldsmobileBravada_GRP_carGeo01_Geo_oldsmobileBravada_interior" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/trafficShared_interior> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }

                            over "oldsmobileBravada_GRP_carGeo01_Geo_oldsmobileBravada_steelBlack" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </Looks/Chrome_Black> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                            }
                        }
                    }
                }
            }

            def SphereLight "trafficCar_lightSource_12" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                float inputs:intensity = 8000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (2.4627525633761707, -0.7069758362331413, 0.5126263518795193)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_13" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0.44447756, 0.00772202)
                float inputs:intensity = 8000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (2.4808535159525036, -0.7059487831301112, 0.4047802156242222)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_14" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                float inputs:intensity = 2000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.4905950319976, -0.37917222608643897, 0.19702434949289316)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_15" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0.00772202, 0.00772202)
                float inputs:intensity = 8000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.2951816910742764, -0.8478183258218905, 0.6089927034974432)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_16" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0.00772202, 0.00772202)
                float inputs:intensity = 4000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.2897389824042875, -0.8446541350724601, 0.7192685961261711)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_17" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                float inputs:intensity = 8000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (2.4627525633761707, 0.70698, 0.5126263518795193)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_18" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0.44447756, 0.00772202)
                float inputs:intensity = 8000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (2.4808535159525036, 0.70595, 0.4047802156242222)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_19" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                float inputs:intensity = 2000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.4905950319976, 0.37917, 0.19702434949289316)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_20" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0.00772202, 0.00772202)
                float inputs:intensity = 8000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.2951816910742764, 0.84782, 0.6089927034974432)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_21" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0.00772202, 0.00772202)
                float inputs:intensity = 4000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.2897389824042875, 0.84465, 0.7192685961261711)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_22" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                float inputs:intensity = 12000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (2.492479131786695, -0.571644244863478, 0.5128584033260699)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "trafficCar_lightSource_23" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                float inputs:intensity = 12000
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (2.492479131786695, 0.57164, 0.5128584033260699)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            over "mesh" (
                active = false
            )
            {
            }
        }

        over "mesh_5BCF5EE9B6482BDA"
        {
            over "mesh" (
                active = false
            )
            {
            }
        }

        over "mesh_A4E88A68BF5DFCDD"
        {
            over "mesh" (
                active = false
            )
            {
            }
        }

        over "mesh_44A453AB45B06EE3"
        {
            over "mesh" (
                active = false
            )
            {
            }
        }

        over "mesh_BA30F7139F4815CD"
        {
            over "mesh" (
                active = false
            )
            {
            }
        }
    }
}


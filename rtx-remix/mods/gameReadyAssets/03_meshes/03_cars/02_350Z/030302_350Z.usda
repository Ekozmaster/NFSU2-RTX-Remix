#usda 1.0
(
    upAxis = "Z"
)

over "RootNode"
{
    over "meshes"
    {
        over "mesh_A1A88D93BBAEEBBB"
        {
            custom int preserveOriginalDrawCall = 1

            def SphereLight "Big_Light" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                float inputs:intensity = 200
                float inputs:radius = 0.02
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (1.761392018402697, -0.6360338642099927, 0.5427420448529795)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "Small_Light" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                color3f inputs:color = (1, 0.53571314, 0)
                float inputs:intensity = 20
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (1.6801166264863419, -0.642175548051295, 0.6075708015283191)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "mesh_5778B07346063069"
        {
            custom int preserveOriginalDrawCall = 1

            def SphereLight "Big_Light" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                float inputs:intensity = 200
                float inputs:radius = 0.02
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (1.761392018402697, 0.63603, 0.5427420448529795)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "Small_Light" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                color3f inputs:color = (1, 0.53571314, 0)
                float inputs:intensity = 20
                float inputs:radius = 0.01
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (1.6801166264863419, 0.64218, 0.6075708015283191)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "mesh_FBA6CD546CFBBF0D"
        {
            custom int preserveOriginalDrawCall = 1

            def SphereLight "Light_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                color3f inputs:color = (1, 0.41698837, 0)
                float inputs:intensity = 20
                float inputs:radius = 0.02
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness = 0.2
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-1.9113392490742172, -0.62992526701521, 0.6188747835266852)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "Light_02" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                color3f inputs:color = (1, 0.41698837, 0)
                float inputs:intensity = 20
                float inputs:radius = 0.02
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness = 0.2
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-1.9870180510886257, -0.5440396037186019, 0.6169653318390829)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "mesh_53854508DBF775EB"
        {
            custom int preserveOriginalDrawCall = 1

            def SphereLight "Light_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                color3f inputs:color = (1, 0.41698837, 0)
                float inputs:intensity = 20
                float inputs:radius = 0.02
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness = 0.2
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-1.9113392490742172, 0.62993, 0.6188747835266852)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "Light_02" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                color3f inputs:color = (1, 0.41698837, 0)
                float inputs:intensity = 20
                float inputs:radius = 0.02
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness = 0.2
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-1.9870180510886257, 0.54404, 0.6169653318390829)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }
    }
}


#usda 1.0
(
    upAxis = "Z"
)

over "RootNode"
{
    over "meshes"
    {
        over "mesh_BDC7C02AE6007137"
        {
            custom int preserveOriginalDrawCall = 1

            def SphereLight "Light_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                float inputs:intensity = 300
                float inputs:radius = 0.04
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness = 0.2
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (1.7142089165186007, -0.6589338152689379, 0.570233700017468)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "Light_02" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                float inputs:intensity = 300
                float inputs:radius = 0.04
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness = 0.2
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (1.8332001258543187, -0.6322644777585538, 0.4953108567396072)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "Small_Light_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                color3f inputs:color = (1, 0.4642855, 0)
                float inputs:intensity = 50
                float inputs:radius = 0.02
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness = 0.2
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (1.9178709660766344, -0.5226816343899827, 0.4534161283111189)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "mesh_1BB335544B071302"
        {
            custom int preserveOriginalDrawCall = 1

            def SphereLight "Light_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                float inputs:intensity = 800
                float inputs:radius = 0.04
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness = 0.2
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (1.7142089165186007, 0.65893, 0.570233700017468)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "Light_02" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                float inputs:intensity = 800
                float inputs:radius = 0.04
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness = 0.2
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (1.8332001258543187, 0.63226, 0.4953108567396072)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "Small_Light_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                color3f inputs:color = (1, 0.4642855, 0)
                float inputs:intensity = 300
                float inputs:radius = 0.02
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness = 0.2
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (1.9178709660766344, 0.52268, 0.4534161283111189)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "mesh_4A9374A021C459AC"
        {
            custom int preserveOriginalDrawCall = 1

            def SphereLight "Light" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                color3f inputs:color = (1, 0, 0)
                float inputs:intensity = 20
                float inputs:radius = 0.05
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-1.9855334176920678, -0.6622007269368169, 0.6587387833123728)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "mesh_69D052393F5DD91B"
        {
            custom int preserveOriginalDrawCall = 1

            def SphereLight "Light" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                color3f inputs:color = (1, 0, 0)
                float inputs:intensity = 20
                float inputs:radius = 0.05
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-1.9855334176920678, 0.6622, 0.6587387833123728)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "mesh_CA6347F982D71357"
        {
            custom int preserveOriginalDrawCall = 1

            def SphereLight "Big_Light" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                float inputs:intensity = 300
                float inputs:radius = 0.04
                float inputs:shaping:cone:angle = 40
                float inputs:shaping:cone:softness = 0.1
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (0, -90, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (1.7124189357063822, -0.6564785498014039, 0.5752332927950692)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "mesh_06352D5F3833189E"
        {
            custom int preserveOriginalDrawCall = 1

            def SphereLight "Big_Light" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                float inputs:intensity = 300
                float inputs:radius = 0.04
                float inputs:shaping:cone:angle = 40
                float inputs:shaping:cone:softness = 0.1
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (0, -90, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (1.7124189357063822, 0.65648, 0.5752332927950692)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "mesh_670472992E7FE88A"
        {
            custom int preserveOriginalDrawCall = 1

            def Xform "bulb_01" (
                references = @../00_Shared/bulb_type_01.usd@
            )
            {
                double3 xformOp:rotateXYZ = (0, 180, 0)
                double3 xformOp:scale = (2, 2, 2)
                double3 xformOp:translate = (-1.9738928133638516, -0.6050414904823689, 0.6110810193708962)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def Xform "bulb_02" (
                references = @../00_Shared/bulb_type_01.usd@
            )
            {
                double3 xformOp:rotateXYZ = (0, 180, 0)
                double3 xformOp:scale = (2, 2, 2)
                double3 xformOp:translate = (-1.8973256070213669, -0.6718864803628568, 0.6087302158953725)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def Xform "bulb_03" (
                references = @../00_Shared/bulb_type_01.usd@
            )
            {
                double3 xformOp:rotateXYZ = (0, 180, 0)
                double3 xformOp:scale = (2, 2, 2)
                double3 xformOp:translate = (-1.9596611600696718, -0.6368490291602664, 0.5434200648776333)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def Xform "bulb_04" (
                references = @../00_Shared/bulb_type_01.usd@
            )
            {
                double3 xformOp:rotateXYZ = (0, 180, 0)
                double3 xformOp:scale = (2, 2, 2)
                double3 xformOp:translate = (-1.9625267840442935, -0.6496306896769557, 0.6776416605737556)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "mesh_6E6532186DC30874"
        {
            custom int preserveOriginalDrawCall = 1

            def Xform "bulb_01" (
                references = @../00_Shared/bulb_type_01.usd@
            )
            {
                double3 xformOp:rotateXYZ = (0, 180, 0)
                double3 xformOp:scale = (2, 2, 2)
                double3 xformOp:translate = (-1.9738928133638516, 0.60504, 0.6110810193708962)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def Xform "bulb_02" (
                references = @../00_Shared/bulb_type_01.usd@
            )
            {
                double3 xformOp:rotateXYZ = (0, 180, 0)
                double3 xformOp:scale = (2, 2, 2)
                double3 xformOp:translate = (-1.8973256070213669, 0.67189, 0.6087302158953725)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def Xform "bulb_03" (
                references = @../00_Shared/bulb_type_01.usd@
            )
            {
                double3 xformOp:rotateXYZ = (0, 180, 0)
                double3 xformOp:scale = (2, 2, 2)
                double3 xformOp:translate = (-1.9596611600696718, 0.63685, 0.5434200648776333)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def Xform "bulb_04" (
                references = @../00_Shared/bulb_type_01.usd@
            )
            {
                double3 xformOp:rotateXYZ = (0, 180, 0)
                double3 xformOp:scale = (2, 2, 2)
                double3 xformOp:translate = (-1.9625267840442935, 0.64963, 0.6776416605737556)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "mesh_1A8EC81D971B4E3C"
        {
            custom int preserveOriginalDrawCall = 1

            def SphereLight "Light" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                color3f inputs:color = (1, 0.27799225, 0)
                float inputs:intensity = 20
                float inputs:radius = 0.03
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-1.9521033101589467, -0.644988283474504, 0.6496764461020419)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "mesh_D52DF622F81A911F"
        {
            custom int preserveOriginalDrawCall = 1

            def SphereLight "Light" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                color3f inputs:color = (1, 0.27799225, 0)
                float inputs:intensity = 20
                float inputs:radius = 0.03
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-1.9521033101589467, 0.64499, 0.6496764461020419)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }
    }
}

